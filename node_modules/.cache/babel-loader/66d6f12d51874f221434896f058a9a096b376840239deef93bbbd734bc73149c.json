{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  carts: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime\n        },\n        selectedQty: 1\n      };\n      for (const element of state.carts) {\n        console.log(element.itemDetails);\n\n        // if (state.carts[i].itemDetails === cart.itemDetails) {\n        //   state.carts[i].selectedQty = state.carts[i].selectedQty + 1;\n        //   return;\n        // }\n      }\n\n      state.carts.push(cart);\n    },\n    removeCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime\n        },\n        selectedQty: 0\n      };\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty - 1;\n      } else {\n        // state.carts.push(cart);\n      }\n    }\n  }\n});\nexport const {\n  addCart,\n  removeCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","carts","cartSlice","name","reducers","addCart","state","action","cart","itemDetails","item","payload","img","type","quantity","sellingPrice","deliveryTime","selectedQty","element","console","log","push","removeCart","idx","findsExistence","actions","reducer"],"sources":["/home/mukulchaudhary/Downloads/blinkit23Oct (1) (1)/blinkit23Oct (1)/blinkit23Oct/src/features/mycart/MyCartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  carts: [],\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime,\n        },\n        selectedQty: 1,\n      };\n      for (const element of state.carts) {\n        console.log(element.itemDetails);\n\n        // if (state.carts[i].itemDetails === cart.itemDetails) {\n        //   state.carts[i].selectedQty = state.carts[i].selectedQty + 1;\n        //   return;\n        // }\n      }\n\n      state.carts.push(cart);\n    },\n    removeCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime,\n        },\n        selectedQty: 0,\n      };\n\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty - 1;\n      } else {\n        // state.carts.push(cart);\n      }\n    },\n  },\n});\n\nexport const { addCart, removeCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,IAAI,GAAG;QACXC,WAAW,EAAE;UACXC,IAAI,EAAEH,MAAM,CAACI,OAAO,CAACD,IAAI;UACzBE,GAAG,EAAEL,MAAM,CAACI,OAAO,CAACC,GAAG;UACvBC,IAAI,EAAEN,MAAM,CAACI,OAAO,CAACE,IAAI;UACzBC,QAAQ,EAAEP,MAAM,CAACI,OAAO,CAACG,QAAQ;UACjCC,YAAY,EAAER,MAAM,CAACI,OAAO,CAACI,YAAY;UACzCC,YAAY,EAAET,MAAM,CAACI,OAAO,CAACK;QAC/B,CAAC;QACDC,WAAW,EAAE;MACf,CAAC;MACD,KAAK,MAAMC,OAAO,IAAIZ,KAAK,CAACL,KAAK,EAAE;QACjCkB,OAAO,CAACC,GAAG,CAACF,OAAO,CAACT,WAAW,CAAC;;QAEhC;QACA;QACA;QACA;MACF;;MAEAH,KAAK,CAACL,KAAK,CAACoB,IAAI,CAACb,IAAI,CAAC;IACxB,CAAC;IACDc,UAAU,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMC,IAAI,GAAG;QACXC,WAAW,EAAE;UACXC,IAAI,EAAEH,MAAM,CAACI,OAAO,CAACD,IAAI;UACzBE,GAAG,EAAEL,MAAM,CAACI,OAAO,CAACC,GAAG;UACvBC,IAAI,EAAEN,MAAM,CAACI,OAAO,CAACE,IAAI;UACzBC,QAAQ,EAAEP,MAAM,CAACI,OAAO,CAACG,QAAQ;UACjCC,YAAY,EAAER,MAAM,CAACI,OAAO,CAACI,YAAY;UACzCC,YAAY,EAAET,MAAM,CAACI,OAAO,CAACK;QAC/B,CAAC;QACDC,WAAW,EAAE;MACf,CAAC;MAED,IAAIM,GAAG,GAAGC,cAAc,CAAClB,KAAK,CAACL,KAAK,EAAEO,IAAI,CAACC,WAAW,CAAC;MACvD,IAAIc,GAAG,KAAK,CAAC,CAAC,EAAE;QACdjB,KAAK,CAACL,KAAK,CAACsB,GAAG,CAAC,CAACN,WAAW,GAAGX,KAAK,CAACL,KAAK,CAACsB,GAAG,CAAC,CAACN,WAAW,GAAG,CAAC;MACjE,CAAC,MAAM;QACL;MAAA;IAEJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,OAAO;EAAEiB;AAAW,CAAC,GAAGpB,SAAS,CAACuB,OAAO;AAExD,eAAevB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}