{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  carts: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      const newItem = {\n        item: action.payload.item,\n        img: action.payload.img,\n        type: action.payload.type,\n        quantity: action.payload.quantity,\n        sellingPrice: action.payload.sellingPrice,\n        deliveryTime: action.payload.deliveryTime\n      };\n      const existingItem = state.carts.find(cart => cart.itemDetails.item === newItem.item && cart.itemDetails.img === newItem.img && cart.itemDetails.type === newItem.type);\n      if (existingItem) {\n        existingItem.itemDetails.quantity += newItem.quantity;\n      } else {\n        state.carts.push({\n          itemDetails: newItem,\n          selectedQty: 1\n        });\n      }\n    },\n    removeCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime\n        },\n        selectedQty: 0\n      };\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty - 1;\n      } else {\n        // state.carts.push(cart);\n      }\n    }\n  }\n});\nexport const {\n  addCart,\n  removeCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","carts","cartSlice","name","reducers","addCart","state","action","newItem","item","payload","img","type","quantity","sellingPrice","deliveryTime","existingItem","find","cart","itemDetails","push","selectedQty","removeCart","idx","findsExistence","actions","reducer"],"sources":["/home/mukulchaudhary/Downloads/blinkit23Oct (1) (1)/blinkit23Oct (1)/blinkit23Oct/src/features/mycart/MyCartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  carts: [],\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      const newItem = {\n        item: action.payload.item,\n        img: action.payload.img,\n        type: action.payload.type,\n        quantity: action.payload.quantity,\n        sellingPrice: action.payload.sellingPrice,\n        deliveryTime: action.payload.deliveryTime,\n      };\n\n      const existingItem = state.carts.find(\n        (cart) =>\n          cart.itemDetails.item === newItem.item &&\n          cart.itemDetails.img === newItem.img &&\n          cart.itemDetails.type === newItem.type\n      );\n\n      if (existingItem) {\n        existingItem.itemDetails.quantity += newItem.quantity;\n      } else {\n        state.carts.push({\n          itemDetails: newItem,\n          selectedQty: 1,\n        });\n      }\n    },\n    removeCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime,\n        },\n        selectedQty: 0,\n      };\n\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty - 1;\n      } else {\n        // state.carts.push(cart);\n      }\n    },\n  },\n});\n\nexport const { addCart, removeCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAG;QACdC,IAAI,EAAEF,MAAM,CAACG,OAAO,CAACD,IAAI;QACzBE,GAAG,EAAEJ,MAAM,CAACG,OAAO,CAACC,GAAG;QACvBC,IAAI,EAAEL,MAAM,CAACG,OAAO,CAACE,IAAI;QACzBC,QAAQ,EAAEN,MAAM,CAACG,OAAO,CAACG,QAAQ;QACjCC,YAAY,EAAEP,MAAM,CAACG,OAAO,CAACI,YAAY;QACzCC,YAAY,EAAER,MAAM,CAACG,OAAO,CAACK;MAC/B,CAAC;MAED,MAAMC,YAAY,GAAGV,KAAK,CAACL,KAAK,CAACgB,IAAI,CAClCC,IAAI,IACHA,IAAI,CAACC,WAAW,CAACV,IAAI,KAAKD,OAAO,CAACC,IAAI,IACtCS,IAAI,CAACC,WAAW,CAACR,GAAG,KAAKH,OAAO,CAACG,GAAG,IACpCO,IAAI,CAACC,WAAW,CAACP,IAAI,KAAKJ,OAAO,CAACI,IACtC,CAAC;MAED,IAAII,YAAY,EAAE;QAChBA,YAAY,CAACG,WAAW,CAACN,QAAQ,IAAIL,OAAO,CAACK,QAAQ;MACvD,CAAC,MAAM;QACLP,KAAK,CAACL,KAAK,CAACmB,IAAI,CAAC;UACfD,WAAW,EAAEX,OAAO;UACpBa,WAAW,EAAE;QACf,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,UAAU,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMW,IAAI,GAAG;QACXC,WAAW,EAAE;UACXV,IAAI,EAAEF,MAAM,CAACG,OAAO,CAACD,IAAI;UACzBE,GAAG,EAAEJ,MAAM,CAACG,OAAO,CAACC,GAAG;UACvBC,IAAI,EAAEL,MAAM,CAACG,OAAO,CAACE,IAAI;UACzBC,QAAQ,EAAEN,MAAM,CAACG,OAAO,CAACG,QAAQ;UACjCC,YAAY,EAAEP,MAAM,CAACG,OAAO,CAACI,YAAY;UACzCC,YAAY,EAAER,MAAM,CAACG,OAAO,CAACK;QAC/B,CAAC;QACDM,WAAW,EAAE;MACf,CAAC;MAED,IAAIE,GAAG,GAAGC,cAAc,CAAClB,KAAK,CAACL,KAAK,EAAEiB,IAAI,CAACC,WAAW,CAAC;MACvD,IAAII,GAAG,KAAK,CAAC,CAAC,EAAE;QACdjB,KAAK,CAACL,KAAK,CAACsB,GAAG,CAAC,CAACF,WAAW,GAAGf,KAAK,CAACL,KAAK,CAACsB,GAAG,CAAC,CAACF,WAAW,GAAG,CAAC;MACjE,CAAC,MAAM;QACL;MAAA;IAEJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEhB,OAAO;EAAEiB;AAAW,CAAC,GAAGpB,SAAS,CAACuB,OAAO;AAExD,eAAevB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}