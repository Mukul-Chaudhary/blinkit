{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  carts: []\n};\nconst findsExistence = (carts, cart) => {\n  for (let i = 0; i < carts.length; i++) {\n    console.log(carts[i].itemDetails, cart);\n    if (carts[i].itemDetails === cart) {\n      return i;\n    }\n  }\n  return -1;\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime\n        },\n        selectedQty: 1\n      };\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty + 1;\n      } else {\n        state.carts.push(cart);\n      }\n    },\n    removeCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime\n        },\n        selectedQty: 0\n      };\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty - 1;\n      } else {\n        // state.carts.push(cart);\n      }\n    }\n  }\n});\nexport const {\n  addCart,\n  removeCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","carts","findsExistence","cart","i","length","console","log","itemDetails","cartSlice","name","reducers","addCart","state","action","item","payload","img","type","quantity","sellingPrice","deliveryTime","selectedQty","idx","push","removeCart","actions","reducer"],"sources":["/home/mukulchaudhary/Downloads/blinkit23Oct (1) (1)/blinkit23Oct (1)/blinkit23Oct/src/features/mycart/MyCartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  carts: [],\n};\n\nconst findsExistence = (carts, cart) => {\n  for (let i = 0; i < carts.length; i++) {\n    console.log(carts[i].itemDetails, cart);\n\n    if (carts[i].itemDetails === cart) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime,\n        },\n        selectedQty: 1,\n      };\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty + 1;\n      } else {\n        state.carts.push(cart);\n      }\n    },\n    removeCart: (state, action) => {\n      const cart = {\n        itemDetails: {\n          item: action.payload.item,\n          img: action.payload.img,\n          type: action.payload.type,\n          quantity: action.payload.quantity,\n          sellingPrice: action.payload.sellingPrice,\n          deliveryTime: action.payload.deliveryTime,\n        },\n        selectedQty: 0,\n      };\n\n      let idx = findsExistence(state.carts, cart.itemDetails);\n      if (idx !== -1) {\n        state.carts[idx].selectedQty = state.carts[idx].selectedQty - 1;\n      } else {\n        // state.carts.push(cart);\n      }\n    },\n  },\n});\n\nexport const { addCart, removeCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACD,KAAK,EAAEE,IAAI,KAAK;EACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACrCE,OAAO,CAACC,GAAG,CAACN,KAAK,CAACG,CAAC,CAAC,CAACI,WAAW,EAAEL,IAAI,CAAC;IAEvC,IAAIF,KAAK,CAACG,CAAC,CAAC,CAACI,WAAW,KAAKL,IAAI,EAAE;MACjC,OAAOC,CAAC;IACV;EACF;EACA,OAAO,CAAC,CAAC;AACX,CAAC;AAED,OAAO,MAAMK,SAAS,GAAGV,WAAW,CAAC;EACnCW,IAAI,EAAE,MAAM;EACZV,YAAY;EACZW,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMX,IAAI,GAAG;QACXK,WAAW,EAAE;UACXO,IAAI,EAAED,MAAM,CAACE,OAAO,CAACD,IAAI;UACzBE,GAAG,EAAEH,MAAM,CAACE,OAAO,CAACC,GAAG;UACvBC,IAAI,EAAEJ,MAAM,CAACE,OAAO,CAACE,IAAI;UACzBC,QAAQ,EAAEL,MAAM,CAACE,OAAO,CAACG,QAAQ;UACjCC,YAAY,EAAEN,MAAM,CAACE,OAAO,CAACI,YAAY;UACzCC,YAAY,EAAEP,MAAM,CAACE,OAAO,CAACK;QAC/B,CAAC;QACDC,WAAW,EAAE;MACf,CAAC;MACD,IAAIC,GAAG,GAAGrB,cAAc,CAACW,KAAK,CAACZ,KAAK,EAAEE,IAAI,CAACK,WAAW,CAAC;MACvD,IAAIe,GAAG,KAAK,CAAC,CAAC,EAAE;QACdV,KAAK,CAACZ,KAAK,CAACsB,GAAG,CAAC,CAACD,WAAW,GAAGT,KAAK,CAACZ,KAAK,CAACsB,GAAG,CAAC,CAACD,WAAW,GAAG,CAAC;MACjE,CAAC,MAAM;QACLT,KAAK,CAACZ,KAAK,CAACuB,IAAI,CAACrB,IAAI,CAAC;MACxB;IACF,CAAC;IACDsB,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMX,IAAI,GAAG;QACXK,WAAW,EAAE;UACXO,IAAI,EAAED,MAAM,CAACE,OAAO,CAACD,IAAI;UACzBE,GAAG,EAAEH,MAAM,CAACE,OAAO,CAACC,GAAG;UACvBC,IAAI,EAAEJ,MAAM,CAACE,OAAO,CAACE,IAAI;UACzBC,QAAQ,EAAEL,MAAM,CAACE,OAAO,CAACG,QAAQ;UACjCC,YAAY,EAAEN,MAAM,CAACE,OAAO,CAACI,YAAY;UACzCC,YAAY,EAAEP,MAAM,CAACE,OAAO,CAACK;QAC/B,CAAC;QACDC,WAAW,EAAE;MACf,CAAC;MAED,IAAIC,GAAG,GAAGrB,cAAc,CAACW,KAAK,CAACZ,KAAK,EAAEE,IAAI,CAACK,WAAW,CAAC;MACvD,IAAIe,GAAG,KAAK,CAAC,CAAC,EAAE;QACdV,KAAK,CAACZ,KAAK,CAACsB,GAAG,CAAC,CAACD,WAAW,GAAGT,KAAK,CAACZ,KAAK,CAACsB,GAAG,CAAC,CAACD,WAAW,GAAG,CAAC;MACjE,CAAC,MAAM;QACL;MAAA;IAEJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,OAAO;EAAEa;AAAW,CAAC,GAAGhB,SAAS,CAACiB,OAAO;AAExD,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}